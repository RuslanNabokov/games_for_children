name: Docker CI/CD

on:
  push:
    branches: [main]

# переменные, общие для всех шагов 
env:
  IMAGE_NAME: learning-adventures            # репозиторий в Docker Hub
  SERVER_PATH: /opt/learning-adventures      # где лежит docker‑compose.yml на сервере
  ADDRESS_SERVER: 10.66.66.1

jobs:
  build-push:
    runs-on: ubuntu-latest
    environment: ruslan_vm   # доступ к secrets/vars, которые вы добавили в Environment

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Set up QEMU & Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            docker.io/ruslannabokov/${{ env.IMAGE_NAME }}:latest
            docker.io/ruslannabokov/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to:   type=gha,mode=max

  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    environment: ruslan_vm

    steps:
      - name: Prepare SSH key & known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ vars.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ci
          chmod 600 ~/.ssh/id_ci
          echo "${{ vars.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Deploy on VPS via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.ADDRESS_SERVER }}         # 176.109.101.91
          username: user1      # deploy‑user (добавьте в secrets)
          command_timeout: '180s'
          key: ${{ vars.SSH_PRIVATE_KEY }} 
          script: |
            set -e
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            cd /opt/learning-adventures
            docker compose pull
            docker compose up -d --remove-orphans
            docker image prune -af

